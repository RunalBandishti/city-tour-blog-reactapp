{"version":3,"sources":["logo.svg","components/Navbar/Navbar.js","components/Tour/Tour.js","tourData.js","components/Tourlist/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","src","logo","alt","href","Tour","state","showInfo","handleInfo","_this","setState","_this$props$tour","this","props","tour","id","city","img","name","info","removeTour","onClick","Component","tourData","TourList","tours","sortedTours","filter","_this2","map","Tour_Tour_Tour","key","App","Fragment","Tourlist_TourList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4e05d5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.12a6659f.svg\";","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"./navbar.scss\";\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar\">\n      <img src={logo} alt=\"city tours company\" />\n      <ul className=\"nav-links\">\n        <li>\n          <a href=\"/\" className=\"nav-link\">\n            home\n          </a>\n        </li>\n        <li>\n          <a href=\"/\" className=\"nav-link\">\n            about\n          </a>\n        </li>\n        <li>\n          <a href=\"/\" className=\"nav-link active\">\n            tours\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import React, { Component } from 'react';\nimport \"./Tour.scss\";\n\nexport default class Tour extends Component {\n    state={\n        showInfo: false\n    };\n    handleInfo = () => {\n        this.setState({\n            showInfo: !this.state.showInfo\n        });\n    }\n    render() {\n        const {id,city,img,name,info} = this.props.tour;\n        const { removeTour } = this.props;\n        return (\n           <article className=\"tour\">\n               <div className=\"img-container\">\n                <img src={img} alt=\"city tour\" />\n                <span className=\"close-btn\" onClick={()=>removeTour(id)}>\n                    <i className=\"fas fa-window-close\" />\n                </span>\n               </div>\n               <div className=\"tour-info\">\n                    <h3>{city}</h3>\n                    <h4>{name}</h4>\n                    <h5>\n                    info{\" \"}\n                    <span onClick={this.handleInfo}>\n                        <i className=\"fas fa-caret-square-down\"/>\n                    </span>\n                    </h5>\n                    {this.state.showInfo && <p>{info}</p>}\n               </div>\n           </article>\n        )\n    }\n}\n","export const tourData = [\n  {\n    id: 1,\n    city: \"new york\",\n    img: \"./img/newyork.jpeg\",\n    name: \"new york bridge tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 2,\n    city: \"paris\",\n    img: \"./img/paris.jpeg\",\n    name: \"paris lights tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 3,\n    city: \"london\",\n    img: \"./img/london.jpeg\",\n    name: \"london royal palace tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  },\n  {\n    id: 4,\n    city: \"tokyo\",\n    img: \"./img/tokyo.jpeg\",\n    name: \"tokyo sushi tour\",\n    info:\n      \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur, nam omnis error corrupti eum assumenda enim odit architecto corporis. Sequi\"\n  }\n];\n","import React, { Component } from 'react'\nimport Tour from '../Tour';\nimport \"./tourlist.scss\";\nimport {tourData} from \"../../tourData\";\n\nexport default class TourList extends Component {\n\nstate = {\n    tours: tourData\n};\nremoveTour = id =>{\n    const {tours} = this.state;\n    const sortedTours = tours.filter(tour => tour.id !== id);\n    this.setState({\n        tours: sortedTours\n    });\n    \n\n};\n    render() {\n        const {tours} = this.state;\n        return (\n            <section className=\"tourList\">\n               {\n                   tours.map(tour => (<Tour key={tour.id} tour={tour} removeTour={this.removeTour}/>))\n               }\n            </section>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TourList from \"./components/Tourlist\";\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <TourList/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}